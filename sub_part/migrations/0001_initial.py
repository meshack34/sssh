# Generated by Django 4.2.7 on 2023-12-20 12:41

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=30)),
                ('middle_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(max_length=30)),
                ('dob', models.DateField(null=True)),
                ('phone_number', models.PositiveBigIntegerField(null=True)),
                ('user_type', models.CharField(blank=True, max_length=30, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_number', models.CharField(blank=True, max_length=50, null=True)),
                ('account_description', models.CharField(blank=True, editable=False, max_length=100, null=True)),
                ('opening_balance', models.FloatField(default=0)),
                ('current_cleared_balance', models.FloatField(default=0)),
                ('current_uncleared_balance', models.FloatField(default=0)),
                ('total_balance', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='AccountType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('abbreviation', models.CharField(max_length=10, null=True, unique=True)),
                ('description', models.CharField(blank=True, max_length=250, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='AddBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_title', models.CharField(max_length=255)),
                ('book_number', models.CharField(blank=True, max_length=255, null=True)),
                ('ISBN_number', models.CharField(blank=True, max_length=255, null=True)),
                ('publisher', models.CharField(blank=True, max_length=255, null=True)),
                ('author', models.CharField(blank=True, max_length=255, null=True)),
                ('subject', models.CharField(blank=True, max_length=255, null=True)),
                ('rank_number', models.CharField(blank=True, max_length=255, null=True)),
                ('qty', models.IntegerField()),
                ('available_qty', models.IntegerField()),
                ('book_price', models.IntegerField()),
                ('post_date', models.DateField()),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AddContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usertype', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('contact_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AddContact_contact_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AddExam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Exam', models.CharField(max_length=100)),
                ('publish', models.BooleanField()),
                ('publish_result', models.BooleanField()),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AddExamSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField(blank=True, null=True)),
                ('duration', models.CharField(blank=True, max_length=100, null=True)),
                ('credit_hours', models.CharField(blank=True, max_length=100, null=True)),
                ('room_number', models.CharField(blank=True, max_length=100, null=True)),
                ('marks_max', models.FloatField(blank=True, max_length=100, null=True)),
                ('marks_min', models.FloatField(blank=True, max_length=100, null=True)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.addexam')),
            ],
        ),
        migrations.CreateModel(
            name='AddGrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_type', models.CharField(choices=[('General Purpose(Pass/Fail)', 'General Purpose(Pass/Fail)'), ('School Based Grading System', 'School Based Grading System'), ('College Based Grading System', 'School Based Grading System'), ('GPA Grading System', 'GPA Grading System')], max_length=255)),
                ('grade_name', models.CharField(max_length=255)),
                ('percent_up_to', models.FloatField()),
                ('percent_from', models.FloatField()),
                ('grade_point', models.FloatField()),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AddHomeWork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('homework_date', models.DateField()),
                ('submission_date', models.DateField()),
                ('attach_document', models.FileField(blank=True, null=True, upload_to='')),
                ('description', models.TextField(blank=True, null=True)),
                ('evaluation_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AddItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.CharField(max_length=255, unique=True)),
                ('unit', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AddLeaveType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='AddStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staff_id', models.CharField(max_length=100)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('father_name', models.CharField(blank=True, max_length=100, null=True)),
                ('mother_name', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('gender', models.CharField(choices=[('female', 'Female'), ('male', 'Male')], max_length=100)),
                ('date_of_birth', models.DateField()),
                ('date_of_joining', models.DateField(blank=True, null=True)),
                ('emergency_contact', models.CharField(blank=True, max_length=100, null=True)),
                ('marital_status', models.CharField(blank=True, choices=[('single', 'Single'), ('married', 'Married'), ('widowed', 'Widowed'), ('separated', 'Separated'), ('not_specified', 'Not Specified')], max_length=20, null=True)),
                ('photo', models.FileField(blank=True, null=True, upload_to='')),
                ('current_address', models.TextField(blank=True, max_length=255, null=True)),
                ('permanent_address', models.TextField(blank=True, max_length=255, null=True)),
                ('qualification', models.TextField(blank=True, max_length=255, null=True)),
                ('work_experience', models.TextField(blank=True, max_length=255, null=True)),
                ('note', models.TextField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, default='Enable', max_length=100, null=True)),
                ('disable_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('epf_no', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_no', models.CharField(blank=True, max_length=255, null=True)),
                ('basic_salary', models.CharField(blank=True, max_length=255, null=True)),
                ('contract_type', models.CharField(blank=True, choices=[('probation', 'Probation'), ('permanent', 'Permanent')], max_length=20, null=True)),
                ('work_shift', models.CharField(blank=True, max_length=255, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_title', models.CharField(blank=True, max_length=255, null=True)),
                ('account_no', models.CharField(blank=True, max_length=255, null=True)),
                ('ifsc_code', models.CharField(blank=True, max_length=255, null=True)),
                ('branch_name', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=255, null=True)),
                ('facebook', models.URLField(blank=True, null=True)),
                ('twitter', models.URLField(blank=True, null=True)),
                ('linkedin', models.URLField(blank=True, null=True)),
                ('instagram', models.URLField(blank=True, null=True)),
                ('resume', models.FileField(blank=True, null=True, upload_to='')),
                ('other_docs', models.FileField(blank=True, null=True, upload_to='')),
                ('joining_letter', models.FileField(blank=True, null=True, upload_to='')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='craeted_by_staff_directory', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AdmitCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template', models.CharField(max_length=255)),
                ('heading', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('exam_name', models.CharField(blank=True, max_length=255, null=True)),
                ('school_name', models.CharField(blank=True, max_length=255, null=True)),
                ('exam_center', models.CharField(blank=True, max_length=255, null=True)),
                ('footer_text', models.CharField(blank=True, max_length=255, null=True)),
                ('left_logo', models.FileField(blank=True, null=True, upload_to='')),
                ('right_logo', models.FileField(blank=True, null=True, upload_to='')),
                ('sign', models.FileField(blank=True, null=True, upload_to='')),
                ('background_image', models.FileField(blank=True, null=True, upload_to='')),
                ('name', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('father_name', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('mother_name', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('date_of_birth', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('admission_no', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('roll_no', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('address', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('gender', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('photo', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('Class', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('section', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
            ],
        ),
        migrations.CreateModel(
            name='ApplyLeave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apply_date', models.DateField(auto_now_add=True)),
                ('role', models.CharField(choices=[('Select', 'Select'), ('admin', 'admin')], max_length=255)),
                ('leave_date_from', models.DateField()),
                ('leave_date_to', models.DateField()),
                ('reason', models.TextField(max_length=255)),
                ('attach_document', models.FileField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='AssetType',
            fields=[
                ('assert_type_ID', models.IntegerField(primary_key=True, serialize=False)),
                ('short_description', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], max_length=100)),
                ('asset_category', models.CharField(choices=[('Asset', 'Asset'), ('Liability', 'Liability'), ('Income', 'Income'), ('Expenses', 'Expenses')], max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='AssignClassTeacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='BasicWebPageDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('top_title', models.CharField(blank=True, max_length=100, null=True)),
                ('first_title', models.CharField(blank=True, max_length=100, null=True)),
                ('last_title', models.CharField(blank=True, max_length=100, null=True)),
                ('school_address', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=50, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=50, null=True)),
                ('about_us_title', models.CharField(blank=True, max_length=100, null=True)),
                ('about_us_description', models.TextField(blank=True, max_length=400, null=True)),
                ('about_us_image', models.FileField(blank=True, null=True, upload_to='')),
                ('twitter_link', models.CharField(blank=True, max_length=200, null=True)),
                ('facebook_link', models.CharField(blank=True, max_length=200, null=True)),
                ('linkedIn_link', models.CharField(blank=True, max_length=200, null=True)),
                ('Instagram_link', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('admin_in_charge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin_in_charge_branch', to='sub_part.addstaff')),
            ],
        ),
        migrations.CreateModel(
            name='CaroselImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('carosel_image', models.FileField(blank=True, null=True, upload_to='carosel_image/')),
                ('image_title', models.CharField(blank=True, max_length=100, null=True)),
                ('image_description', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChargeType',
            fields=[
                ('charge_type_ID', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('short_description', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(max_length=100)),
                ('mode', models.CharField(choices=[('flat', 'Flat Charge'), ('percentage', 'Percentage')], default='percentage', max_length=100)),
                ('value', models.FloatField(default=100)),
                ('Dr_charge_GL_category', models.CharField(default='NA', max_length=100)),
                ('Cr_charge_GL_category', models.CharField(default='NA', max_length=100)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Class', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ComplainType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complain_type', models.CharField(max_length=250)),
                ('description', models.TextField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=100)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Curriculum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('curriculum_type', models.CharField(choices=[('CBC', 'CBC'), ('8.4.4', '8.4.4'), ('IGCSE', 'IGCSE'), ('IB', 'IB'), ('A.C.E', 'Accelerated Christian Education')], default='', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='CustomFields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_belongs_to', models.CharField(choices=[('Student', 'Student'), ('Staff', 'Staff')], max_length=500)),
                ('field_type', models.CharField(choices=[('input', 'Input'), ('number', 'Number'), ('textarea', 'Textarea'), ('select', 'Select'), ('multiselect', 'Multi Select'), ('checkbox', 'Checkbox'), ('Date', 'Date Picker'), ('datetime-local', 'Datetime Picker'), ('color', 'Color Picker'), ('url', 'HyperLink')], max_length=500)),
                ('field_name', models.CharField(max_length=50)),
                ('grid', models.IntegerField()),
                ('field_value', models.TextField(blank=True, null=True)),
                ('required', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='DesignMarkSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template', models.CharField(max_length=255)),
                ('heading', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('exam_name', models.CharField(blank=True, max_length=255, null=True)),
                ('school_name', models.CharField(blank=True, max_length=255, null=True)),
                ('exam_center', models.CharField(blank=True, max_length=255, null=True)),
                ('body_text', models.TextField(blank=True, max_length=255, null=True)),
                ('footer_text', models.TextField(blank=True, max_length=255, null=True)),
                ('printing_date', models.DateField(blank=True, null=True)),
                ('left_logo', models.FileField(blank=True, null=True, upload_to='')),
                ('right_logo', models.FileField(blank=True, max_length=255, null=True, upload_to='')),
                ('left_sign', models.FileField(blank=True, max_length=255, null=True, upload_to='')),
                ('middle_sign', models.FileField(blank=True, max_length=255, null=True, upload_to='')),
                ('right_sign', models.FileField(blank=True, max_length=255, null=True, upload_to='')),
                ('background_image', models.FileField(blank=True, max_length=255, null=True, upload_to='')),
                ('name', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('father_name', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('mother_name', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('date_of_birth', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('admission_no', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('roll_no', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('address', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('gender', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('photo', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('grade', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('section', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
            ],
        ),
        migrations.CreateModel(
            name='DisableReason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='DiscountAssign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='EmailSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gmail', models.CharField(blank=True, max_length=200, null=True)),
                ('password', models.CharField(blank=True, max_length=200, null=True)),
                ('default_from_email', models.CharField(blank=True, max_length=200, null=True)),
                ('email_port', models.CharField(blank=True, max_length=200, null=True)),
                ('email_host', models.CharField(blank=True, max_length=200, null=True)),
                ('updated_at_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_title', models.CharField(max_length=255)),
                ('venue', models.CharField(blank=True, max_length=255, null=True)),
                ('event_start', models.DateField()),
                ('event_end', models.DateField()),
                ('sidebar', models.BooleanField(blank=True, null=True)),
                ('add_media', models.FileField(blank=True, null=True, upload_to='')),
                ('description', models.TextField(blank=True, null=True)),
                ('meta_title', models.CharField(max_length=255)),
                ('meta_keyword', models.CharField(max_length=255)),
                ('meta_description', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_title', models.CharField(blank=True, max_length=100, null=True)),
                ('event_start_date', models.DateField(blank=True, null=True)),
                ('event_end_date', models.DateField(blank=True, null=True)),
                ('venue', models.CharField(blank=True, max_length=255, null=True)),
                ('Approx_participants', models.IntegerField(blank=True, null=True)),
                ('visual_media', models.FileField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='examGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('exam_type', models.CharField(choices=[('General Purpose(Pass/Fail)', 'General Purpose(Pass/Fail)'), ('School Based Grading System', 'School Based Grading System'), ('College Based Grading System', 'School Based Grading System'), ('GPA Grading System', 'GPA Grading System')], max_length=255)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ExpenseHead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expense_head', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FeesAssign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('balance_amount', models.IntegerField(blank=True, null=True)),
                ('paid_amount', models.IntegerField(blank=True, default=0, null=True)),
                ('Dicount_amount', models.IntegerField(blank=True, default=0, null=True)),
                ('fine_amount', models.IntegerField(blank=True, default=0, null=True)),
                ('status', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='FeesGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('description', models.TextField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FeesType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('Fees_code', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FeesTypeDiscount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('discount_code', models.IntegerField()),
                ('DiscountType', models.CharField(blank=True, choices=[('Select', 'Select'), ('None', 'None'), ('Percentage', 'Percentage'), ('Fine Amount', 'Fine Amount')], max_length=50, null=True)),
                ('amount', models.IntegerField(default=0)),
                ('percentage', models.CharField(default=0, max_length=250)),
                ('description', models.TextField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GLLine',
            fields=[
                ('line_number', models.IntegerField(primary_key=True, serialize=False)),
                ('short_description', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('update_date', models.DateField(auto_now_add=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], max_length=100)),
                ('current_cleared_balance', models.FloatField(default=0)),
                ('current_uncleared_balance', models.FloatField(default=0)),
                ('total_balance', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assert_type_ID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.assettype')),
                ('master_GL_line', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.glline')),
            ],
        ),
        migrations.CreateModel(
            name='GradingScale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_grade', models.IntegerField()),
                ('max_grade', models.IntegerField()),
                ('subject_grade', models.CharField(choices=[('A', 'A'), ('A-', 'A-'), ('B+', 'B+'), ('B', 'B'), ('B-', 'B-'), ('C+', 'C+'), ('C', 'C'), ('C-', 'C-'), ('D+', 'D+'), ('D', 'D'), ('D-', 'D-'), ('E', 'E'), ('F', 'F')], max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='GradingSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('scale', models.IntegerField(blank=True, null=True)),
                ('points', models.IntegerField(blank=True, null=True)),
                ('pass_remarks', models.CharField(max_length=200)),
                ('fail_remarks', models.CharField(max_length=200)),
                ('Class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.class')),
            ],
        ),
        migrations.CreateModel(
            name='Hostel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostel_name', models.CharField(max_length=255)),
                ('hostel_type', models.CharField(choices=[('select', 'select'), ('Girls', 'Girls'), ('Boys', 'Boys'), ('Combine', 'Combine')], max_length=255)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('intake', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HostelRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_name', models.CharField(max_length=255)),
                ('number_of_bed', models.IntegerField()),
                ('cost_per_bed', models.IntegerField()),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
                ('hostel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.hostel')),
            ],
        ),
        migrations.CreateModel(
            name='IncomeExpense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_type', models.CharField(choices=[('expense', 'Expense'), ('income', 'Income')], max_length=10)),
                ('object_id', models.PositiveIntegerField()),
                ('date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('attach_document', models.FileField(blank=True, null=True, upload_to='')),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Incomehead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('description', models.TextField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Infrastructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('total_count', models.CharField(blank=True, max_length=100, null=True)),
                ('visual_media', models.FileField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='ItemCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_category', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ItemStore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_store_name', models.CharField(max_length=255)),
                ('item_stock_code', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ItemSupplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('phone_no', models.IntegerField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('contact_person_name', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_person_phone', models.IntegerField(blank=True, null=True)),
                ('contact_person_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_name', models.CharField(max_length=255)),
                ('Class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.class')),
            ],
        ),
        migrations.CreateModel(
            name='MediaManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to='')),
                ('url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Modules',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system', models.TextField(blank=True, null=True)),
                ('student', models.TextField(blank=True, null=True)),
                ('parent', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('news_title', models.CharField(blank=True, max_length=100, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('visual_link', models.CharField(blank=True, max_length=100, null=True)),
                ('visual_media', models.FileField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='noticeBoard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField(max_length=255)),
                ('notice_date', models.DateField()),
                ('publish_on', models.DateField()),
                ('message_to', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Offers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_title', models.CharField(blank=True, max_length=100, null=True)),
                ('Offer_title', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, max_length=700, null=True)),
                ('note1', models.CharField(blank=True, max_length=100, null=True)),
                ('note2', models.CharField(blank=True, max_length=100, null=True)),
                ('note3', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OnlineClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_title', models.CharField(max_length=250)),
                ('class_date_time', models.DateTimeField()),
                ('class_duration', models.IntegerField()),
                ('meeting_url', models.CharField(max_length=250)),
                ('description', models.TextField(blank=True, max_length=700, null=True)),
                ('status', models.CharField(choices=[('Awaited', 'Awaited'), ('Cancelled!', 'Cancelled!'), ('Finished', 'Finished')], default='Awaited', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('Class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.class')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OnlineExam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_title', models.CharField(max_length=255)),
                ('exam_from', models.DateField()),
                ('exam_to', models.DateField()),
                ('time_duration', models.DurationField(blank=True, null=True)),
                ('attempt', models.IntegerField(blank=True, null=True)),
                ('passing_percentage', models.IntegerField(blank=True, null=True)),
                ('publish', models.BooleanField(blank=True, null=True)),
                ('publish_result', models.BooleanField(blank=True, null=True)),
                ('description', models.TextField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ParentMeeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meeting_title', models.CharField(max_length=250)),
                ('meeting_date_time', models.DateTimeField()),
                ('meeting_duration', models.IntegerField()),
                ('meeting_url', models.CharField(max_length=250)),
                ('description', models.TextField(blank=True, max_length=700, null=True)),
                ('status', models.CharField(choices=[('Awaited', 'Awaited'), ('Cancelled!', 'Cancelled!'), ('Finished', 'Finished')], default='Awaited', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('Class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.class')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PhoneCallLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=13)),
                ('date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True, max_length=250, null=True)),
                ('next_follow_up_date', models.DateField(blank=True, null=True)),
                ('call_duration', models.CharField(blank=True, max_length=250, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('call_type', models.CharField(choices=[('Incoming', 'Incoming'), ('Outgoing', 'Outgoing')], default='Incoming', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='PostalDispatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_title', models.CharField(max_length=50)),
                ('reference_no', models.IntegerField()),
                ('address', models.TextField(blank=True, max_length=250, null=True)),
                ('note', models.TextField(blank=True, max_length=250, null=True)),
                ('from_title', models.CharField(max_length=50)),
                ('date', models.DateField(blank=True, null=True)),
                ('attact_document', models.FileField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='PostalReceive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_title', models.CharField(max_length=50)),
                ('reference_no', models.IntegerField()),
                ('address', models.TextField(blank=True, max_length=250, null=True)),
                ('note', models.TextField(blank=True, max_length=250, null=True)),
                ('to_title', models.CharField(max_length=50)),
                ('date', models.DateField(blank=True, null=True)),
                ('attact_document', models.FileField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Purpose',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purpose', models.CharField(max_length=250)),
                ('description', models.TextField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionBank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=255)),
                ('question', models.CharField(max_length=255)),
                ('answer', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=250)),
                ('description', models.TextField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('permissions', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RoomType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_type', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('route_title', models.CharField(max_length=255)),
                ('fare', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SchoolHeads',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('head_name', models.CharField(blank=True, max_length=100, null=True)),
                ('head_position', models.CharField(blank=True, max_length=100, null=True)),
                ('head_image', models.FileField(blank=True, null=True, upload_to='')),
                ('quotes', models.CharField(blank=True, max_length=100, null=True)),
                ('twitter_link', models.CharField(blank=True, max_length=100, null=True)),
                ('facebook_link', models.CharField(blank=True, max_length=100, null=True)),
                ('linkedIn_link', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SchoolStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staff_name', models.CharField(blank=True, max_length=100, null=True)),
                ('staff_position', models.CharField(blank=True, max_length=100, null=True)),
                ('staff_image', models.FileField(blank=True, null=True, upload_to='')),
                ('twitter_link', models.CharField(blank=True, max_length=100, null=True)),
                ('facebook_link', models.CharField(blank=True, max_length=100, null=True)),
                ('linkedIn_link', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='SendEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('recipients', models.CharField(max_length=255)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='SMSSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('twilio_account_SID', models.CharField(blank=True, max_length=500, null=True)),
                ('twilio_auth_token', models.CharField(blank=True, max_length=500, null=True)),
                ('twilio_regeister_phone_no', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.CharField(blank=True, max_length=200, null=True)),
                ('updated_at_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=250)),
                ('description', models.TextField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StaffMeeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meeting_title', models.CharField(max_length=250)),
                ('meeting_date_time', models.DateTimeField()),
                ('meeting_duration', models.IntegerField()),
                ('meeting_url', models.CharField(max_length=250)),
                ('description', models.TextField(blank=True, max_length=700, null=True)),
                ('status', models.CharField(choices=[('Awaited', 'Awaited'), ('Cancelled!', 'Cancelled!'), ('Finished', 'Finished')], default='Awaited', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('staff', models.ManyToManyField(to='sub_part.addstaff')),
            ],
        ),
        migrations.CreateModel(
            name='StudentAdmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admission_no', models.CharField(max_length=100)),
                ('roll_number', models.CharField(blank=True, max_length=100, null=True)),
                ('first_name', models.CharField(max_length=500)),
                ('last_name', models.CharField(blank=True, max_length=500, null=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=500)),
                ('date_of_birth', models.DateField()),
                ('religion', models.CharField(blank=True, max_length=500, null=True)),
                ('Caste', models.CharField(blank=True, max_length=500, null=True)),
                ('mobile_number', models.CharField(blank=True, max_length=500, null=True)),
                ('email', models.EmailField(blank=True, max_length=500, null=True)),
                ('admission_date', models.DateField(blank=True, null=True)),
                ('student_photo', models.FileField(blank=True, null=True, upload_to='')),
                ('Blood_group', models.CharField(blank=True, choices=[('O+', 'O+'), ('A+', 'A+'), ('B+', 'B+'), ('AB+', 'AB+'), ('O-', 'O-'), ('A-', 'A-'), ('B-', 'B-'), ('AB-', 'AB-')], max_length=100, null=True)),
                ('height', models.CharField(blank=True, max_length=500, null=True)),
                ('weight', models.CharField(blank=True, max_length=500, null=True)),
                ('as_on_date', models.DateField(blank=True, null=True)),
                ('Father_name', models.CharField(blank=True, max_length=500, null=True)),
                ('Father_phone', models.CharField(blank=True, max_length=513, null=True)),
                ('Father_occupation', models.CharField(blank=True, max_length=500, null=True)),
                ('Father_photo', models.FileField(blank=True, null=True, upload_to='')),
                ('mother_name', models.CharField(blank=True, max_length=505, null=True)),
                ('mother_phone', models.CharField(blank=True, max_length=513, null=True)),
                ('mother_occupation', models.CharField(blank=True, max_length=500, null=True)),
                ('mother_photo', models.FileField(blank=True, null=True, upload_to='')),
                ('if_guardian_is', models.CharField(choices=[('Father', 'Father'), ('Mother', 'Mother'), ('Other', 'Other')], max_length=100)),
                ('guardian_name', models.CharField(max_length=500)),
                ('guardian_relation', models.CharField(blank=True, max_length=500, null=True)),
                ('guardian_email', models.EmailField(blank=True, max_length=500, null=True)),
                ('guardian_phone', models.CharField(max_length=513)),
                ('guardian_occupation', models.CharField(blank=True, max_length=500, null=True)),
                ('guardian_photo', models.FileField(blank=True, null=True, upload_to='')),
                ('guardian_address', models.TextField(blank=True, max_length=250)),
                ('if_permanent_address_is_current_address', models.BooleanField(default=False)),
                ('guardian_address_is_current_address', models.BooleanField(default=False)),
                ('current_address', models.TextField(blank=True, max_length=250, null=True)),
                ('permanent_address', models.TextField(blank=True, max_length=250, null=True)),
                ('bank_account_number', models.CharField(blank=True, max_length=500, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=500, null=True)),
                ('ifsc_code', models.CharField(blank=True, max_length=500, null=True)),
                ('national_identification_number', models.CharField(blank=True, max_length=50, null=True)),
                ('local_identification_number', models.CharField(blank=True, max_length=50, null=True)),
                ('rte', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=100)),
                ('previous_school_detail', models.TextField(blank=True, max_length=250, null=True)),
                ('note', models.TextField(blank=True, max_length=250, null=True)),
                ('title_1', models.CharField(blank=True, max_length=500, null=True)),
                ('documents_1', models.FileField(blank=True, null=True, upload_to='')),
                ('title_2', models.CharField(blank=True, max_length=500, null=True)),
                ('documents_2', models.FileField(blank=True, null=True, upload_to='')),
                ('title_3', models.CharField(blank=True, max_length=500, null=True)),
                ('documents_3', models.FileField(blank=True, null=True, upload_to='')),
                ('title_4', models.CharField(blank=True, max_length=500, null=True)),
                ('documents_4', models.FileField(blank=True, null=True, upload_to='')),
                ('disable_date', models.DateField(blank=True, null=True)),
                ('disable_note', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, default='Enable', max_length=250, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('Class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.class')),
            ],
        ),
        migrations.CreateModel(
            name='StudentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='StudentCertificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate_name', models.CharField(blank=True, max_length=255, null=True)),
                ('header_left_text', models.CharField(blank=True, max_length=500, null=True)),
                ('header_center_text', models.CharField(blank=True, max_length=255, null=True)),
                ('header_right_text', models.CharField(blank=True, max_length=700, null=True)),
                ('body_text', models.TextField(blank=True, max_length=5000, null=True)),
                ('footer_left_text', models.CharField(blank=True, max_length=255, null=True)),
                ('footer_center_text', models.CharField(blank=True, max_length=255, null=True)),
                ('footer_right_text', models.CharField(blank=True, max_length=255, null=True)),
                ('background_image', models.FileField(blank=True, null=True, upload_to='')),
                ('student_image', models.FileField(blank=True, null=True, upload_to='')),
                ('background_color_code', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentHouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentId',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('background_image', models.FileField(blank=True, null=True, upload_to='')),
                ('logo', models.FileField(blank=True, null=True, upload_to='')),
                ('signature', models.FileField(blank=True, null=True, upload_to='')),
                ('school_name', models.CharField(max_length=255)),
                ('address', models.TextField(max_length=255)),
                ('id_card_title', models.CharField(max_length=255)),
                ('header_color', models.CharField(max_length=255)),
                ('admission_no', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('student_name', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('Class', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('father_name', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('mother_name', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('student_address', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('phone', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('date_of_birth', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('blood_group', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
            ],
        ),
        migrations.CreateModel(
            name='SubjectGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(max_length=255)),
                ('Class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.class')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.section')),
            ],
        ),
        migrations.CreateModel(
            name='Subjects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_name', models.CharField(max_length=255)),
                ('subject_type', models.CharField(blank=True, choices=[('theory', 'Theory'), ('practical', 'Practical')], max_length=20, null=True)),
                ('subject_code', models.CharField(blank=True, max_length=15, null=True)),
                ('grading', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.gradingsystem')),
            ],
        ),
        migrations.CreateModel(
            name='SystemFields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_fields', models.TextField(blank=True, null=True)),
                ('staff_fields', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term_name', models.CharField(choices=[('Term 1', 'Term 1'), ('Term 2', 'Term 2'), ('Term 3', 'Term 3')], max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='TransactionCode',
            fields=[
                ('code', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('short_description', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_number', models.CharField(max_length=255)),
                ('vehicle_model', models.CharField(blank=True, max_length=255, null=True)),
                ('year_made', models.PositiveIntegerField(blank=True, null=True)),
                ('driver_name', models.CharField(blank=True, max_length=255, null=True)),
                ('driver_licence', models.CharField(blank=True, max_length=255, null=True)),
                ('driver_contact', models.IntegerField(blank=True, null=True)),
                ('note', models.TextField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='WebEnquiry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='VisitorBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('phone', models.CharField(blank=True, max_length=500, null=True)),
                ('id_card', models.CharField(blank=True, max_length=50, null=True)),
                ('number_of_person', models.IntegerField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('in_time', models.TimeField(blank=True, null=True)),
                ('out_time', models.TimeField(blank=True, null=True)),
                ('note', models.TextField(blank=True, max_length=250, null=True)),
                ('attact_document', models.FileField(blank=True, null=True, upload_to='')),
                ('purpose', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.purpose')),
            ],
        ),
        migrations.CreateModel(
            name='UploadContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_title', models.CharField(max_length=255)),
                ('content_type', models.CharField(choices=[('assignments', 'Assignments'), ('study_material', 'Study Material'), ('syllabus', 'Syllabus'), ('other_download', 'Other Download')], max_length=20)),
                ('upload_date', models.DateField()),
                ('description', models.TextField()),
                ('file', models.FileField(upload_to='')),
                ('Class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.class')),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.section')),
            ],
        ),
        migrations.CreateModel(
            name='TransactionType',
            fields=[
                ('type_id', models.CharField(default='txn-001', max_length=10, primary_key=True, serialize=False)),
                ('short_description', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(null=True)),
                ('fee1_mode', models.CharField(choices=[('percentage', 'percentage'), ('flat', 'flat')], default='percentage', max_length=10)),
                ('fee1', models.FloatField(default=0)),
                ('fee2_mode', models.CharField(choices=[('percentage', 'percentage'), ('flat', 'flat')], default='percentage', max_length=10)),
                ('fee2', models.FloatField(default=0)),
                ('fee3_mode', models.CharField(choices=[('percentage', 'percentage'), ('flat', 'flat')], default='percentage', max_length=10)),
                ('fee3', models.FloatField(default=0)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cr_acc', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cr_acc', to='sub_part.account')),
                ('cr_gl', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cr_gl', to='sub_part.glline')),
                ('cr_transaction_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cr_txn_code', to='sub_part.transactioncode')),
                ('dr_acc', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dr_acc', to='sub_part.account')),
                ('dr_gl', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dr_gl', to='sub_part.glline')),
                ('dr_transaction_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dr_txn_code', to='sub_part.transactioncode')),
            ],
        ),
        migrations.CreateModel(
            name='topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic_name', models.CharField(max_length=255)),
                ('date_save', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, max_length=15, null=True)),
                ('Class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.class')),
                ('lesson_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.lesson')),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.section')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.subjects')),
                ('subject_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.subjectgroup')),
            ],
        ),
        migrations.CreateModel(
            name='TimeTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_from', models.TimeField()),
                ('time_to', models.TimeField()),
                ('room_no', models.CharField(max_length=100)),
                ('day', models.CharField(max_length=100)),
                ('Class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.class')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.section')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.session')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.subjects')),
                ('subject_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.subjectgroup')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.addstaff')),
            ],
        ),
        migrations.CreateModel(
            name='Timeline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('date', models.DateField()),
                ('description', models.TextField(blank=True, max_length=500, null=True)),
                ('attact_document', models.FileField(blank=True, null=True, upload_to='')),
                ('visible_to_this_person', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.session')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.studentadmission')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField()),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(default='pending', max_length=100)),
                ('Class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.class')),
                ('assign_teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.assignclassteacher')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.section')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.addstaff')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.studentadmission')),
            ],
        ),
        migrations.AddField(
            model_name='subjectgroup',
            name='subject',
            field=models.ManyToManyField(to='sub_part.subjects'),
        ),
        migrations.CreateModel(
            name='StudentSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.session')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.studentadmission')),
            ],
        ),
        migrations.CreateModel(
            name='Studentprofileupdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fieldshide', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, default='Enabled', max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Studentmeetingnote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('student_meeting', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.onlineclass')),
            ],
        ),
        migrations.CreateModel(
            name='StudentFess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('paid_amount', models.CharField(blank=True, max_length=100, null=True)),
                ('payment_mode_fee', models.CharField(blank=True, max_length=100, null=True)),
                ('amount_discount', models.CharField(blank=True, max_length=100, null=True)),
                ('amount_fine', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(max_length=100)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('discount_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.discountassign')),
                ('fess', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.feesassign')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.session')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.studentadmission')),
            ],
        ),
        migrations.CreateModel(
            name='StudentDocuments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('document', models.FileField(upload_to='Student Document/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.session')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.studentadmission')),
            ],
        ),
        migrations.CreateModel(
            name='StudentCustomFieldValues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(blank=True, null=True)),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.customfields')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.studentadmission')),
            ],
        ),
        migrations.CreateModel(
            name='StudentClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('Class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.class')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.section')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.session')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.studentadmission')),
            ],
        ),
        migrations.CreateModel(
            name='StudentAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance_status', models.CharField(max_length=100)),
                ('attendance_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('note', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.studentadmission')),
            ],
        ),
        migrations.AddField(
            model_name='studentadmission',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.studentcategory'),
        ),
        migrations.AddField(
            model_name='studentadmission',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='craeted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='studentadmission',
            name='diable_reson',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.disablereason'),
        ),
        migrations.AddField(
            model_name='studentadmission',
            name='hostel',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.hostel'),
        ),
        migrations.AddField(
            model_name='studentadmission',
            name='room_number',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.hostelroom'),
        ),
        migrations.AddField(
            model_name='studentadmission',
            name='route_list',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.route'),
        ),
        migrations.AddField(
            model_name='studentadmission',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.section'),
        ),
        migrations.AddField(
            model_name='studentadmission',
            name='session',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.session'),
        ),
        migrations.AddField(
            model_name='studentadmission',
            name='student_house',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.studenthouse'),
        ),
        migrations.AddField(
            model_name='studentadmission',
            name='user_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_parent', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='studentadmission',
            name='user_student',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_student', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='studentadmission',
            name='vehicle_number',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.vehicle'),
        ),
        migrations.CreateModel(
            name='StaffTimeline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=250)),
                ('date', models.DateField()),
                ('description', models.TextField(blank=True, max_length=500, null=True)),
                ('attact_document', models.FileField(blank=True, null=True, upload_to='')),
                ('visible_to_this_person', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.addstaff')),
            ],
        ),
        migrations.CreateModel(
            name='StaffMeetingNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('Staff_meeting', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.staffmeeting')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StaffLeave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_leave', models.IntegerField()),
                ('leave_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.addleavetype')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.addstaff')),
            ],
        ),
        migrations.CreateModel(
            name='StaffDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('document', models.FileField(upload_to='Staffs Document/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.addstaff')),
            ],
        ),
        migrations.CreateModel(
            name='StaffCustomFieldValues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(blank=True, null=True)),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.customfields')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.addstaff')),
            ],
        ),
        migrations.CreateModel(
            name='StaffAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance_status', models.CharField(max_length=100)),
                ('attendance_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('note', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.addstaff')),
            ],
        ),
        migrations.CreateModel(
            name='SchoolYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=255)),
                ('term', models.ManyToManyField(to='sub_part.term')),
            ],
        ),
        migrations.CreateModel(
            name='SchoolCompositions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('no_of_years', models.IntegerField()),
                ('Class', models.ManyToManyField(to='sub_part.class')),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('admin_in_charge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin_in_charge_school', to='sub_part.addstaff')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.company')),
                ('head_teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='head_teacher_school', to='sub_part.schoolheads')),
                ('hr_in_charge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hr_in_charge_school', to='sub_part.addstaff')),
            ],
        ),
        migrations.CreateModel(
            name='PromoteStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currrent_result', models.CharField(blank=True, max_length=100, null=True)),
                ('next_session_status', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('Class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.class')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.section')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.session')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.studentadmission')),
            ],
        ),
        migrations.CreateModel(
            name='PrintHeaderFooter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_fees_receipt', models.FileField(blank=True, null=True, upload_to='')),
                ('image_payslip', models.FileField(blank=True, null=True, upload_to='')),
                ('note_fees_receipt', models.TextField(blank=True, null=True)),
                ('note_payslip', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PayrollSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('basic_salary', models.IntegerField(null=True)),
                ('earning', models.FloatField(null=True)),
                ('deduction', models.FloatField(null=True)),
                ('gross_salary', models.FloatField(null=True)),
                ('Tax', models.FloatField(null=True)),
                ('net_salary', models.FloatField(null=True)),
                ('status', models.CharField(max_length=100)),
                ('payment_date', models.DateField(max_length=100, null=True)),
                ('Months', models.CharField(max_length=100, null=True)),
                ('year', models.CharField(max_length=100, null=True)),
                ('Payment_mode', models.CharField(max_length=100, null=True)),
                ('Note', models.TextField(max_length=500, null=True)),
                ('Frist_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.addstaff')),
            ],
        ),
        migrations.CreateModel(
            name='ParentMeetingNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('parent_meeting', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.parentmeeting')),
            ],
        ),
        migrations.AddField(
            model_name='parentmeeting',
            name='section',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.section'),
        ),
        migrations.AddField(
            model_name='parentmeeting',
            name='staff',
            field=models.ManyToManyField(to='sub_part.addstaff'),
        ),
        migrations.AddField(
            model_name='parentmeeting',
            name='student',
            field=models.ManyToManyField(to='sub_part.studentadmission'),
        ),
        migrations.AddField(
            model_name='onlineclass',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.role'),
        ),
        migrations.AddField(
            model_name='onlineclass',
            name='section',
            field=models.ManyToManyField(to='sub_part.section'),
        ),
        migrations.AddField(
            model_name='onlineclass',
            name='staff',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.addstaff'),
        ),
        migrations.CreateModel(
            name='NonReturnableItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory_id', models.CharField(max_length=255)),
                ('min_quantity', models.IntegerField()),
                ('max_quantity', models.IntegerField()),
                ('duration_in_days', models.PositiveIntegerField()),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.additem')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issue_to1', to='sub_part.addstaff')),
                ('user_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.role')),
            ],
        ),
        migrations.CreateModel(
            name='MarkDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.FileField(upload_to='Result Document/')),
                ('Class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.class')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.addexam')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.section')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.subjects')),
            ],
        ),
        migrations.CreateModel(
            name='Managealumini',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Current_phone', models.IntegerField(null=True)),
                ('current_email', models.EmailField(max_length=254, null=True)),
                ('Occupation', models.CharField(max_length=200, null=True)),
                ('address', models.CharField(max_length=200, null=True)),
                ('photo', models.FileField(null=True, upload_to='')),
                ('students_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.studentadmission')),
            ],
        ),
        migrations.CreateModel(
            name='MailSearchTemp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100)),
                ('Staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.addstaff')),
                ('Student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.studentadmission')),
            ],
        ),
        migrations.CreateModel(
            name='LoginCredentials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_username', models.CharField(blank=True, max_length=50, null=True)),
                ('student_password', models.CharField(blank=True, max_length=50, null=True)),
                ('parent_username', models.CharField(blank=True, max_length=50, null=True)),
                ('parent_passwod', models.CharField(blank=True, max_length=50, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.studentadmission')),
            ],
        ),
        migrations.CreateModel(
            name='LibrayMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('library_card_no', models.CharField(max_length=255)),
                ('member_type', models.CharField(max_length=255)),
                ('status', models.CharField(default='active', max_length=255)),
                ('staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.addstaff')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.studentadmission')),
            ],
        ),
        migrations.CreateModel(
            name='LessonPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_topic', models.CharField(max_length=100)),
                ('lecture_youtube_url', models.URLField(blank=True, null=True)),
                ('lecture_vedio', models.FileField(blank=True, null=True, upload_to='lecture_vedio/')),
                ('attachment', models.FileField(blank=True, null=True, upload_to='lecture_attachment/')),
                ('teaching_method', models.TextField(blank=True, null=True)),
                ('general_objectives', models.TextField(blank=True, null=True)),
                ('pervious_knowledge', models.TextField(blank=True, null=True)),
                ('comprehensive_questions', models.TextField(blank=True, null=True)),
                ('presentation', models.TextField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.lesson')),
                ('time_table', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.timetable')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.topic')),
            ],
        ),
        migrations.AddField(
            model_name='lesson',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.section'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.subjects'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='subject_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.subjectgroup'),
        ),
        migrations.CreateModel(
            name='ItemStockDeatail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('available_quantity', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.additem')),
                ('item_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.itemcategory')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.itemstore')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.itemsupplier')),
            ],
        ),
        migrations.CreateModel(
            name='ItemStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('purchase_price', models.IntegerField()),
                ('date', models.DateField()),
                ('attach_document', models.FileField(blank=True, null=True, upload_to='')),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.additem')),
                ('item_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.itemcategory')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.itemstore')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.itemsupplier')),
            ],
        ),
        migrations.CreateModel(
            name='ItemReturn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('return_date', models.DateField()),
                ('remark', models.TextField(blank=True, null=True)),
                ('quantity', models.IntegerField()),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.additem')),
                ('item_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.itemcategory')),
            ],
        ),
        migrations.CreateModel(
            name='IssueItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_date', models.DateField()),
                ('return_date', models.DateField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, default='issued', max_length=255, null=True)),
                ('quantity', models.IntegerField()),
                ('issued_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.addstaff')),
                ('issued_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issue_to', to='sub_part.addstaff')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.additem')),
                ('item_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.itemcategory')),
                ('user_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.role')),
            ],
        ),
        migrations.CreateModel(
            name='IssueBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issued_date', models.DateField(auto_now_add=True)),
                ('due_return_date', models.DateField()),
                ('return_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.addbook')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.libraymember')),
            ],
        ),
        migrations.AddField(
            model_name='hostelroom',
            name='room_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.roomtype'),
        ),
        migrations.CreateModel(
            name='GeneralSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_name', models.CharField(max_length=200)),
                ('school_code', models.IntegerField()),
                ('address', models.CharField(max_length=200)),
                ('phone', models.IntegerField()),
                ('email', models.EmailField(max_length=254)),
                ('months', models.CharField(blank=True, choices=[('January', 'january'), ('February', 'february'), ('March', 'march'), ('April', 'april'), ('May', 'may'), ('June', 'june'), ('July', 'July'), ('August', 'august'), ('September', 'september'), ('October', 'october'), ('November', 'november'), ('December', 'december')], max_length=100, null=True)),
                ('country', models.CharField(blank=True, choices=[('India', 'India'), ('Kenya', 'Kenya')], max_length=100, null=True)),
                ('edit_print_logo', models.ImageField(blank=True, null=True, upload_to='')),
                ('edit_admin_logo', models.ImageField(blank=True, null=True, upload_to='')),
                ('edit_admin_small_logo', models.ImageField(blank=True, null=True, upload_to='')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.session')),
            ],
        ),
        migrations.CreateModel(
            name='FeesMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('due_date', models.DateField(blank=True, null=True)),
                ('amount', models.CharField(max_length=50)),
                ('fine_type', models.CharField(blank=True, choices=[('Select', 'Select'), ('None', 'None'), ('Percentage', 'Percentage'), ('Fine Amount', 'Fine Amount')], max_length=50, null=True)),
                ('percentage', models.CharField(max_length=250)),
                ('fine_amount', models.CharField(blank=True, max_length=250, null=True)),
                ('status', models.CharField(default='Active', max_length=250)),
                ('fees_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.feesgroup')),
                ('fees_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.feestype')),
            ],
        ),
        migrations.CreateModel(
            name='FeesCollectionAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_id', models.CharField(max_length=50)),
                ('account_balance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date_time', models.DateTimeField()),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.branch')),
                ('income_expense_head', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.incomeexpense')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.school')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.studentadmission')),
            ],
            options={
                'ordering': ['-date_time'],
            },
        ),
        migrations.AddField(
            model_name='feesassign',
            name='fees',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.feesmaster'),
        ),
        migrations.AddField(
            model_name='feesassign',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.session'),
        ),
        migrations.AddField(
            model_name='feesassign',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.studentadmission'),
        ),
        migrations.CreateModel(
            name='ExpenseCashBookAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_type', models.CharField(choices=[('Income', 'Income'), ('Expense', 'Expense'), ('Cash', 'Cash'), ('Book', 'Book')], max_length=10)),
                ('account_id', models.CharField(max_length=50)),
                ('account_balance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('income', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.account')),
                ('income_expense_head', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.incomeexpense')),
            ],
            options={
                'ordering': ['-account_type'],
            },
        ),
        migrations.CreateModel(
            name='ExamStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('Class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.class')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.addexam')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.section')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.studentadmission')),
            ],
        ),
        migrations.CreateModel(
            name='EventCalendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=500, null=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('startstime', models.DateTimeField()),
                ('endtime', models.DateTimeField()),
                ('status', models.CharField(blank=True, max_length=200, null=True)),
                ('repeats', models.CharField(choices=[('Public', 'Public'), ('Private!', 'Private!'), ('All super user', 'All super user'), ('Protected', 'Protected')], max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EntryMarks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance', models.BooleanField()),
                ('marks', models.IntegerField()),
                ('note', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.addexam')),
                ('exam_student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.examstudent')),
                ('exam_subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.addexamsubject')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.studentadmission')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.subjects')),
            ],
        ),
        migrations.CreateModel(
            name='EmailSmsLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(blank=True, max_length=200, null=True)),
                ('send_by', models.CharField(max_length=100)),
                ('sent_to', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EducationLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('composition', models.ManyToManyField(to='sub_part.schoolcompositions')),
            ],
        ),
        migrations.AddField(
            model_name='discountassign',
            name='discount',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.feestypediscount'),
        ),
        migrations.AddField(
            model_name='discountassign',
            name='fees',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.feesassign'),
        ),
        migrations.AddField(
            model_name='discountassign',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.session'),
        ),
        migrations.AddField(
            model_name='discountassign',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.studentadmission'),
        ),
        migrations.CreateModel(
            name='DisableHistroy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disable_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('disable_note', models.TextField()),
                ('diable_reson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.disablereason')),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.session')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.studentadmission')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.branch')),
                ('head_teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='head_teacher_department', to='sub_part.schoolheads')),
            ],
        ),
        migrations.CreateModel(
            name='ContanctMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_message', models.TextField(blank=True, null=True)),
                ('to_message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(max_length=200)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.addcontact')),
            ],
        ),
        migrations.CreateModel(
            name='Complain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complain_by', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=13)),
                ('date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True, max_length=250, null=True)),
                ('action_taken', models.CharField(blank=True, max_length=50, null=True)),
                ('assigned', models.CharField(blank=True, max_length=50, null=True)),
                ('note', models.TextField(blank=True, max_length=250, null=True)),
                ('attact_document', models.FileField(blank=True, null=True, upload_to='')),
                ('complain_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.complaintype')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.source')),
            ],
        ),
        migrations.CreateModel(
            name='ClassRegister',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.class')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.section')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.studentadmission')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.addstaff')),
            ],
        ),
        migrations.AddField(
            model_name='class',
            name='grading',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.gradingsystem'),
        ),
        migrations.AddField(
            model_name='class',
            name='section',
            field=models.ManyToManyField(to='sub_part.section'),
        ),
        migrations.CreateModel(
            name='Calendarnofication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('date', models.DateField()),
                ('status', models.CharField(blank=True, default='incompleted', max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='branch',
            name='school',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='school_branch', to='sub_part.school'),
        ),
        migrations.AddField(
            model_name='branch',
            name='staff_in_charge',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff_in_charge_branch', to='sub_part.addstaff'),
        ),
        migrations.CreateModel(
            name='AvailableLeave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('available_leave', models.IntegerField()),
                ('total_leave', models.IntegerField()),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.session')),
                ('staff_leave', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.staffleave')),
            ],
        ),
        migrations.CreateModel(
            name='AssingHomeWork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluation_date', models.DateField(blank=True, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('document', models.FileField(blank=True, null=True, upload_to='Home work/')),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('home_work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.addhomework')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.studentadmission')),
            ],
        ),
        migrations.CreateModel(
            name='AssignVehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('route', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.route')),
                ('vehicle', models.ManyToManyField(to='sub_part.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='AssignSubjectTeacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.class')),
                ('class_teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.addstaff')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.section')),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.session')),
                ('subject', models.ManyToManyField(to='sub_part.subjects')),
            ],
        ),
        migrations.CreateModel(
            name='AssignSubjects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.class')),
                ('grading', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.addgrade')),
                ('section', models.ManyToManyField(to='sub_part.section')),
            ],
        ),
        migrations.CreateModel(
            name='AssignSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.class')),
                ('subject', models.ManyToManyField(to='sub_part.subjects')),
            ],
        ),
        migrations.AddField(
            model_name='assignclassteacher',
            name='Class',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.class'),
        ),
        migrations.AddField(
            model_name='assignclassteacher',
            name='class_teacher',
            field=models.ManyToManyField(to='sub_part.addstaff'),
        ),
        migrations.AddField(
            model_name='assignclassteacher',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.section'),
        ),
        migrations.AddField(
            model_name='assignclassteacher',
            name='session',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.session'),
        ),
        migrations.CreateModel(
            name='ApproveLeave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apply_date', models.DateField()),
                ('leave_dates', models.TextField()),
                ('number_of_days', models.IntegerField(blank=True, null=True)),
                ('LOP_leave_dates', models.TextField(blank=True, null=True)),
                ('LOP_number_of_days', models.IntegerField(blank=True, null=True)),
                ('reason', models.TextField(blank=True, max_length=255, null=True)),
                ('note', models.TextField(blank=True, max_length=255, null=True)),
                ('attach_document', models.FileField(blank=True, null=True, upload_to='')),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approve', 'Approve'), ('Disaprove', 'Disaprove')], default='Pending', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('leave_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.addleavetype')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.addstaff')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.role')),
            ],
        ),
        migrations.CreateModel(
            name='AlumniEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_for', models.CharField(choices=[('all_alumini', 'All Alumni'), ('Class', 'Class')], max_length=20)),
                ('event_title', models.CharField(max_length=255)),
                ('event_date_from', models.DateField()),
                ('event_date_to', models.DateField()),
                ('note', models.TextField(blank=True, null=True)),
                ('event_notification_message', models.TextField(blank=True, null=True)),
                ('email', models.BooleanField()),
                ('sms', models.BooleanField()),
                ('passed_out_session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.session')),
                ('section', models.ManyToManyField(blank=True, to='sub_part.section')),
                ('select_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.class')),
            ],
        ),
        migrations.CreateModel(
            name='AdmissionEnquiry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('phone_number', models.CharField(max_length=13)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('address', models.TextField(blank=True, max_length=250, null=True)),
                ('description', models.TextField(blank=True, max_length=250, null=True)),
                ('note', models.TextField(blank=True, max_length=250, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('next_follow_up_date', models.DateField(blank=True, null=True)),
                ('assigned', models.CharField(blank=True, max_length=50, null=True)),
                ('number_of_child', models.IntegerField(blank=True, null=True)),
                ('Class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.class')),
                ('reference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.reference')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.source')),
            ],
        ),
        migrations.AddField(
            model_name='addstaff',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='department_staff_directory', to='sub_part.department'),
        ),
        migrations.AddField(
            model_name='addstaff',
            name='designation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='designation_staff_directory', to='sub_part.designation'),
        ),
        migrations.AddField(
            model_name='addstaff',
            name='roles',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.role'),
        ),
        migrations.AddField(
            model_name='addstaff',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Addleave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apply_date', models.DateField()),
                ('from_date', models.DateField()),
                ('to_date', models.DateField()),
                ('reason', models.TextField(blank=True, max_length=255, null=True)),
                ('attach_document', models.FileField(blank=True, null=True, upload_to='')),
                ('status', models.CharField(default='disapprove', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('Class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.class')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approved_by', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.section')),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.session')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.studentadmission')),
            ],
        ),
        migrations.AddField(
            model_name='additem',
            name='item_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.itemcategory'),
        ),
        migrations.CreateModel(
            name='AddIncome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=50)),
                ('date', models.DateField()),
                ('amount', models.CharField(max_length=50)),
                ('attach_document', models.FileField(blank=True, null=True, upload_to='')),
                ('description', models.TextField(blank=True, max_length=250, null=True)),
                ('Income_head', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.incomehead')),
            ],
        ),
        migrations.AddField(
            model_name='addhomework',
            name='Class',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.class'),
        ),
        migrations.AddField(
            model_name='addhomework',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='addhomework',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.section'),
        ),
        migrations.AddField(
            model_name='addhomework',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.subjects'),
        ),
        migrations.AddField(
            model_name='addhomework',
            name='subject_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.subjectgroup'),
        ),
        migrations.CreateModel(
            name='AddExpense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('invoice_number', models.CharField(max_length=255)),
                ('date', models.DateTimeField()),
                ('amount', models.IntegerField()),
                ('attach_document', models.FileField(blank=True, null=True, upload_to='')),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
                ('expense_head', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.expensehead')),
            ],
        ),
        migrations.AddField(
            model_name='addexamsubject',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sub_part.subjects'),
        ),
        migrations.AddField(
            model_name='addexam',
            name='exam_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.examgroup'),
        ),
        migrations.AddField(
            model_name='addexam',
            name='session',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.session'),
        ),
        migrations.AddField(
            model_name='addcontact',
            name='staff',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.addstaff'),
        ),
        migrations.AddField(
            model_name='addcontact',
            name='student',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.studentadmission'),
        ),
        migrations.AddField(
            model_name='addcontact',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='AccountEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_ID', models.CharField(max_length=50, unique=True)),
                ('entry_type', models.CharField(blank=True, choices=[('PL', 'PL'), ('AL', 'AL')], max_length=2, null=True)),
                ('transaction_ID', models.CharField(max_length=100)),
                ('amount', models.FloatField()),
                ('currency', models.CharField(default='KES', max_length=10)),
                ('debit_credit_marker', models.CharField(max_length=100)),
                ('exposure_date', models.DateTimeField(auto_now_add=True)),
                ('entry_date', models.DateTimeField(auto_now_add=True)),
                ('posting_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('account_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trustee_acc_number', to='sub_part.account')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='account',
            name='account_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sub_part.accounttype'),
        ),
        migrations.AddField(
            model_name='account',
            name='gl_line_number',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gl_line_number', to='sub_part.glline'),
        ),
        migrations.AddField(
            model_name='account',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
